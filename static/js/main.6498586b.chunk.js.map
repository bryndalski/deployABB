{"version":3,"sources":["reportWebVitals.js","components/auth/userContext.js","components/auth/logIn.js","components/editRecord.js","components/deleteRecord.js","components/table.js","components/sheets.js","components/search.js","components/upload.js","components/addRecord.js","components/download.js","components/deleteTable.js","components/clearTable.js","components/auth/Options/addUser.js","components/auth/Options/passwordChange.js","components/addTable.js","components/home.js","components/routerComponent.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserContext","createContext","LoginComponent","useContext","Setuser","user","useState","password","setPassword","login","setLogin","response","setResponse","document","title","className","type","placeholder","onChange","e","target","value","onClick","axios","method","headers","data","username","url","res","message","success","Promise","logged","to","editAlert","row","setData","editTrigger","seteditTrigger","sheet","a","filter","id","index","findIndex","x","Toast","SweetAlert","mixin","toast","position","showConfirmButton","timer","Columns","Object","keys","htmlContent","i","length","fire","showCancelButton","html","allowOutsideClick","result","isConfirmed","shift","object","valueToCollect","querySelectorAll","name","Headers","catch","err","text","icon","deleteRecord","Insertindex","cancelButtonColor","confirmButtonColor","newData","splice","Table","props","loading","setLoading","dataFromSvr","columns","setcolumns","filteredItems","setFilteredItems","dataFetch","sheetToImport","undefined","columnMaker","data2","newColumns","columnNames","push","filtring","search","filtred","obj","flag","values","forEach","val","String","indexOf","useEffect","refreshFire","loader","role","items","isLoading","keyField","currentPage","itemsPerPage","tableHeaderClass","tableClass","totalItems","options","searchBox","insertButton","expandable","actionsColumn","permissions","pagination","translations","editAction","deleteAction","z","onColumnClick","onEdit","onDelete","SheetsComponent","close","sheetValue","sheets","setSheets","sheetsGetter","onMenuOpen","isSearchable","defaultOptions","SearchInput","InputValue","setInputValue","changeSearch","uploadAlert","input","inputAttributes","file","FormData","append","error","addRecord","setrefreshFire","preConfirm","pop","console","log","fileDownload","cancelButtonText","confirmButtonText","responseType","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","dropTable","Sheet","secondStep","confirmText","Math","floor","random","toString","reverseButtons","clearTable","NewUser","progressSteps","queue","inputPlaceholder","inputOptions","admin","moderator","guest","email","passwordChange","focusConfirm","getElementById","formValues","RodAdd","dataObject","required","inputLabel","min","max","step","inputValue","queueArray","col_num","dataToSend","HomeComponent","setColumns","SearchModalStatus","ChangeSearchModalStatus","setSheet","Provider","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SidteRouter","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6498586b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from 'react'\r\n\r\nexport const UserContext = createContext({})\r\n// export default UserContext","import { React, useState, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport { UserContext } from './userContext'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../styles/loginStyle.css'\r\n\r\nconst LoginComponent = () => {\r\n    const { user, Setuser } = useContext(UserContext)\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [login, setLogin] = useState('');\r\n    const [response, setResponse] = useState(null)\r\n\r\n    const loginFunction = () => {\r\n        if (login !== '' && password !== '') {\r\n            axios({\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n                data: {\r\n                    username: login,\r\n                    password: password,\r\n                },\r\n                url: \"https://serverabb.herokuapp.com/login\",\r\n            })\r\n                .then((res) => {\r\n                    setResponse(res.data.message)\r\n                    if (res.data.success) {\r\n                        new Promise(() => {\r\n                            Setuser({\r\n                                ...res.data.user,\r\n                                logged: true\r\n                            })\r\n                        }).then(() => {\r\n                            return <Redirect to='/home' />\r\n                        })\r\n                    }\r\n                })\r\n        } else {\r\n            setResponse(\"enter valid data\")\r\n        }\r\n\r\n    }\r\n    document.title = `Login`;\r\n    return (\r\n        < div className=\"container  d-flex align-items-center w-100 h-100 justify-content-center\" >\r\n            <div className=\"row w-100 d-flex justify-content-center\">\r\n                <div className=\"col-md-8 customColumn\">\r\n                    <div className=\"card bg-ligt customCard\">\r\n                        <div className=\"box d-flex flex-column align-items-center  customLogin\">\r\n                            <h3 className=\"m-5\">Login</h3>\r\n                            <input type=\"text\" className=\"form-control  m-2 \" placeholder=\"Login\" onChange={(e) => setLogin(e.target.value)} />\r\n                            <input type=\"password\" className=\"form-control  m-3\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                            <span >{response}</span>\r\n                            <button className=\"btn btn-info w-50 m-4\"\r\n                                onClick={loginFunction}\r\n                            >Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LoginComponent \r\n","import SweetAlert from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\n//TODO add axios \r\nconst editAlert = async (row, data, setData, editTrigger, seteditTrigger, sheet) => {\r\n    row = data.filter((value) => {\r\n        return value.id === row\r\n    })\r\n    row = row[0]\r\n\r\n    let index = data.findIndex((x) => {\r\n        return x.id === row.id\r\n    })\r\n    const Toast = SweetAlert.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 500,\r\n    })\r\n    let Columns = Object.keys(row)\r\n    let htmlContent = ''\r\n    for (let i = 0; i < Columns.length; i++) {\r\n        if (Columns[i] !== 'id')\r\n            htmlContent += `<div class=\"form-group m-3 d-flex  flex-row\">  <label class=\"d-inline-block mr-auto w-50  col-form-label\"  for=${Columns[i]}>${Columns[i]}</label><Input class=\"newRowInput w-50 ml-autow form-control\" type=\"text\" id=\"${i}\" value=\"${row[Columns[i]]}\" name=\"${Columns[i]}\" /></div>`\r\n    }\r\n    SweetAlert.fire({\r\n        showCancelButton: true,\r\n        title: `Edit Record`,\r\n        html: htmlContent,\r\n        allowOutsideClick: false,\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            Columns = Columns.shift()\r\n            let object = {}\r\n            let valueToCollect = document.querySelectorAll('.newRowInput')\r\n            for (let i = 0; i < valueToCollect.length; i++) {\r\n                object[valueToCollect[i].name] = valueToCollect[i].value\r\n            }\r\n            //end of data collecting \r\n            axios({\r\n                method: \"POST\",\r\n                url: \"https://serverabb.herokuapp.com/editRow\",\r\n                Headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n                data: {\r\n                    ...object,\r\n                    sheet: sheet,\r\n                    id: row.id,\r\n                }\r\n            }).catch((err) => {\r\n                SweetAlert.fire({\r\n                    title: \"Error\",\r\n                    text: \"unexpected error occurred while editing your data \\n Please try one more time\",\r\n                    icon: 'error',\r\n                })\r\n            }).then((res) => {\r\n                try {\r\n                    if (res.data.success) {\r\n                        data[index] = {\r\n                            id: row.id,\r\n                            ...object,\r\n                        };\r\n                        try {\r\n                            new Promise(async () => {\r\n                                await Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Record has been edited',\r\n                                    timer: 100\r\n                                })\r\n                                await setData(data)\r\n                                await seteditTrigger((editTrigger + 1))\r\n                            })\r\n                        } catch (err) {\r\n                            SweetAlert.fire(\r\n                                'Sorry!',\r\n                                'Your record has not been edited.',\r\n                                'error'\r\n                            )\r\n                        }\r\n                    } else\r\n                        SweetAlert.fire(\r\n                            'Sorry!',\r\n                            'Your record has not been edited.',\r\n                            'error'\r\n                        )\r\n                } catch (err) {\r\n                    SweetAlert.fire(\r\n                        'Sorry!',\r\n                        'Your recordcould not be edited. \\n Please check your network connection and try agin ',\r\n                        'error'\r\n                    )\r\n                }\r\n\r\n            })\r\n            //only after svr response\r\n\r\n        }\r\n    })\r\n}\r\nexport default editAlert","import SweetAlert from 'sweetalert2'\r\nimport axios from 'axios'\r\nconst deleteRecord = (Insertindex, data, setData, editTrigger, seteditTrigger, sheet) => {\r\n    let index = data.findIndex((x) => {\r\n        return x.id === Insertindex\r\n    })\r\n    const Toast = SweetAlert.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 500,\r\n    })\r\n    SweetAlert.fire({\r\n        icon: 'warning',\r\n        title: `Delete row ?`,\r\n        text: \"This action is permament \\n Your data is going to be  deleted forever\",\r\n        showCancelButton: true,\r\n        cancelButtonColor: \"green\",\r\n        confirmButtonColor: \"red\"\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            //TODO axios\r\n            axios({\r\n                method: \"post\",\r\n                url: \"https://serverabb.herokuapp.com/deleteRow\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n                data: {\r\n                    ...data[index],\r\n                    sheet: sheet,\r\n                    id: data[index].id\r\n                }\r\n            }).catch((err) => {\r\n                return SweetAlert.fire({\r\n                    title: \"Ooops\",\r\n                    text: \"Could not connect to server\",\r\n                    icon: 'error',\r\n                })\r\n            }).then((res) => {\r\n                try {\r\n                    if (res.data.success) {\r\n                        try {\r\n                            new Promise(async () => {\r\n                                let newData = data\r\n                                newData.splice(index, 1)\r\n                                await setData(newData)\r\n                                await await Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Row has been deleted'\r\n                                })\r\n                                await seteditTrigger((editTrigger + 1))\r\n                            })\r\n                        } catch (err) {\r\n                            return SweetAlert.fire({\r\n                                title: \"Ooops\",\r\n                                text: \"unexpected error occurred deleting row in your table\",\r\n                                icon: 'error',\r\n                            })\r\n                        }\r\n                        SweetAlert.fire(\r\n                            'Deleted!',\r\n                            'Your row has been deleted.',\r\n                            'success'\r\n                        )\r\n                    }\r\n                } catch (err) {\r\n                    return SweetAlert.fire({\r\n                        title: \"Ooops\",\r\n                        text: \"unexpected error occurred deleting row in your table\",\r\n                        icon: 'error',\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\nexport default deleteRecord","import { React, useState, useEffect, useContext } from 'react';\r\nimport ReactAsyncTable from 'react-async-table';\r\nimport axios from 'axios'\r\nimport SweetAlert from 'sweetalert2';\r\nimport editAlert from './editRecord'\r\nimport deleteRecord from './deleteRecord'\r\nimport { UserContext } from './auth/userContext'\r\n\r\n\r\n\r\nconst Table = (props) => {\r\n    //hooks for table\r\n    const { user, Setuser } = useContext(UserContext) //contexr\r\n    const [loading, setLoading] = useState(true)\r\n    //for data\r\n    const [dataFromSvr, setData] = useState([])\r\n    const [columns, setcolumns] = useState([])\r\n    const [filteredItems, setFilteredItems] = useState([])\r\n    const [editTrigger, seteditTrigger] = useState(0)\r\n    //network\r\n    const dataFetch = async () => {\r\n        setLoading(true)\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"https://serverabb.herokuapp.com/fetchColumn\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n            data: {\r\n                sheet: props.sheetToImport,\r\n            }\r\n        }).catch((err) => {\r\n            return SweetAlert.fire({\r\n                title: \"Ooops\",\r\n                text: \"unexpected error occurred while loading your table \\n please check your network connection \",\r\n                icon: 'error',\r\n\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.data !== undefined) {\r\n                    if (res.data.length !== 0) {\r\n                        setData(res.data)\r\n                        columnMaker(res.data)\r\n                        setLoading(false)\r\n                    }\r\n                    else {\r\n                        return SweetAlert.fire({\r\n                            title: \"Sorry\",\r\n                            text: \"No data was found\",\r\n                            icon: 'error',\r\n                        })\r\n                    }\r\n\r\n                }\r\n            })\r\n    }\r\n    const columnMaker = async (data2) => {\r\n        let newColumns = []\r\n        let columns = Object.keys(data2[0])\r\n        props.columnNames(columns)\r\n\r\n        for (let i = 0; i < columns.length; i++) {\r\n            if (columns[i] !== 'id')\r\n                newColumns.push({\r\n                    'dataField': columns[i],\r\n                    'text': columns[i],\r\n                })\r\n        }\r\n        setcolumns(newColumns)\r\n    }\r\n    const loadingMessage = () => {\r\n        return (\r\n            <div className=\"spinner-border \" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        )\r\n    }\r\n    const filtring = () => {\r\n        if (props.search === '') {\r\n            setFilteredItems(dataFromSvr)\r\n        } else {\r\n            let filtred = dataFromSvr.filter((obj) => {\r\n                var flag = false;\r\n                Object.values(obj).forEach((val) => {\r\n\r\n                    if (String(val).indexOf(props.search) > -1) {\r\n                        flag = true;\r\n                        return;\r\n                    }\r\n                });\r\n                if (flag)\r\n                    return obj;\r\n            });\r\n            setFilteredItems(filtred)\r\n        }\r\n    }\r\n    // other\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        dataFetch()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        filtring()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.sheetToImport, props.refreshFire])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        filtring()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editTrigger])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        filtring()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dataFromSvr])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        filtring()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.search])\r\n    return (\r\n        < ReactAsyncTable\r\n            loader={loadingMessage}\r\n            items={filteredItems}\r\n            isLoading={loading}\r\n            keyField=\"id\"\r\n            columns={columns}\r\n            currentPage={0}\r\n            itemsPerPage={0}\r\n            tableHeaderClass='tableHeader'\r\n            tableClass='tableBody'\r\n            totalItems={dataFromSvr.length}\r\n            options={{\r\n                searchBox: false,\r\n                insertButton: false,\r\n                expandable: false,\r\n                actionsColumn: (user.permissions !== 'guest') ? true : false,\r\n                pagination: false,\r\n            }\r\n            }\r\n            translations={{\r\n                editAction: 'Edit',\r\n                deleteAction: 'Delete',\r\n            }} z\r\n            onColumnClick={(e) => {\r\n            }}\r\n\r\n            onEdit={(e) => {\r\n                editAlert(e, dataFromSvr, setData, editTrigger, seteditTrigger, props.sheetToImport)\r\n            }\r\n            }\r\n            onDelete={(e) => {\r\n                deleteRecord(e, dataFromSvr, setData, editTrigger, seteditTrigger, props.sheetToImport)\r\n            }}\r\n        />\r\n    )\r\n}\r\nexport default Table;\r\n","import { React, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nfunction SheetsComponent({ sheet, close, sheetValue }) {\r\n    const [sheets, setSheets] = useState([])\r\n    const sheetsGetter = async () => {\r\n        axios({\r\n            method: \"get\",\r\n            url: \"https://serverabb.herokuapp.com/sheets\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n\r\n        })\r\n            .then((res) => {\r\n                setSheets(res.data)\r\n            })\r\n    }\r\n    return (\r\n\r\n        <Select\r\n            placeholder=\"select sheet\"\r\n            onMenuOpen={sheetsGetter}\r\n            isSearchable={true}\r\n            options={sheets}\r\n            name=\"sheetName\"\r\n            defaultOptions={true}\r\n            className=\"SheetSelect m-2\"\r\n            onChange={e => { sheet(e.value) }}\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SheetsComponent;\r\n","import { React, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Input from 'react-select/src/components/input';\r\nimport \"../styles/searchStyle.css\";//css\r\n\r\nconst SearchInput = (props) => {\r\n    const [InputValue, setInputValue] = useState('')\r\n    return (\r\n        <div className=\"input-group SheetSelect csText  m-2\">\r\n            <input type=\"text\"\r\n                className=\"form-control customTextInput\"\r\n                placeholder=\"Search...\"\r\n                onChange={(e) => { setInputValue(e.target.value) }}\r\n            />\r\n            <div className=\"input-group-apend colorChange\">\r\n                <span className=\"input-group-text cstomInputText fa fa-search\" onClick={() => { props.changeSearch(InputValue) }} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SearchInput;","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SweetAlert from 'sweetalert2';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const uploadAlert = async () => {\r\n    const { value: file } = await SweetAlert.fire({\r\n        title: 'Upload file',\r\n        text: \"your file needs to be saved as XLS or XLSX\",\r\n        input: 'file',\r\n        inputAttributes: {\r\n            'accept': '.xlsx,.xls', //TODO remove second condition\r\n            'aria-label': 'Upload your file'\r\n        }\r\n    })\r\n    if (file) {\r\n        if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel') { //TODO remove second condition\r\n            try {\r\n                let data = new FormData()\r\n                data.append('file', file)\r\n                axios({\r\n                    method: \"POST\",\r\n                    url: \"https://serverabb.herokuapp.com/fileImport\",\r\n                    headers: {\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        'Content-Type': 'multipart/form-data'\r\n\r\n                    },\r\n                    data: data\r\n                }).catch((err) => {\r\n                    return SweetAlert.fire({\r\n                        title: \"Ooops\",\r\n                        text: \"unexpected error occurred while uploading your file\",\r\n                        icon: 'error',\r\n\r\n                    })\r\n                })\r\n                    .then((res) => {\r\n                        if (res.data !== undefined && res.data.success) {\r\n                            SweetAlert.fire({\r\n                                title: res.data.message,\r\n                                icon: 'success',\r\n\r\n                            })\r\n                        }\r\n                    })\r\n            } catch (error) {\r\n                SweetAlert.fire({\r\n                    title: \"Ooops\",\r\n                    text: \"unexpected error occurred while uploading your file\",\r\n                    icon: 'error',\r\n\r\n                })\r\n            }\r\n\r\n        } else {\r\n            SweetAlert.fire({\r\n                title: \"Wrong file type\",\r\n                text: \"Please upload only XLSX\",\r\n                icon: 'error',\r\n\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SweetAlert from 'sweetalert2';\r\nimport axios from 'axios'\r\n\r\nexport const addRecord = async (Columns, sheet, setrefreshFire, refreshFire) => {\r\n    let htmlContent = ''\r\n    for (let i = 0; i < Columns.length; i++) {\r\n        if (Columns[i] !== 'id')\r\n            htmlContent += `<div class=\"form-group m-3 d-flex  flex-row\">  <label class=\"d-inline-block mr-auto w-50  col-form-label\"  for=\"$Columns[i]\">${Columns[i]}</label><Input class=\"newRowInput w-50 ml-autow form-control\" type=\"text\" id=\"${i}\" name=\"${Columns[i]}\" required/></div>`\r\n    }\r\n\r\n    await SweetAlert.fire({\r\n        showCancelButton: true,\r\n        title: \"Add record\",\r\n        html: htmlContent,\r\n        preConfirm: () => {\r\n            try {\r\n                let object = {}\r\n                Columns = Columns.pop()\r\n                let valueToCollect = document.querySelectorAll('.newRowInput')\r\n                for (let i = 0; i < valueToCollect.length; i++) {\r\n                    object[valueToCollect[i].name] = valueToCollect[i].value\r\n                }\r\n                axios({\r\n                    method: \"POST\",\r\n                    url: \"https://serverabb.herokuapp.com/newLine\",\r\n                    headers: {\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                    },\r\n                    data: {\r\n                        ...object,\r\n                        sheet: sheet\r\n                    },\r\n                }).catch((err) => {\r\n                    return SweetAlert.fire({\r\n                        title: \"Oops\",\r\n                        text: \"unexpected error occurred while reading your data \\n Please try one more time\",\r\n                        icon: 'error',\r\n                    })\r\n                })\r\n                    .then((res) => {\r\n                        console.log(res)\r\n                        if (res.data !== undefined) {\r\n                            if (res.data.success) {\r\n                                SweetAlert.fire({\r\n                                    title: \"Success\",\r\n                                    text: \"Record successfully added  \",\r\n                                    icon: 'success',\r\n                                })\r\n                                setrefreshFire(refreshFire + 1)\r\n                            }\r\n                            else\r\n                                SweetAlert.fire({\r\n                                    title: \"Error\",\r\n                                    text: \"unexpected error occurred while adding your data \\n Please try one more time\",\r\n                                    icon: 'error',\r\n                                })\r\n                        } else {\r\n                            SweetAlert.fire({\r\n                                title: \"Error\",\r\n                                text: \"unexpected error occurred while adding your data \\n Please try one more time\",\r\n                                icon: 'error',\r\n                            })\r\n                        }\r\n                    })\r\n            }\r\n            catch (err) {\r\n                return SweetAlert.fire({\r\n                    title: \"Oops\",\r\n                    text: \"unexpected error occurred while reading your data \\n Please try one more time\",\r\n                    icon: 'error',\r\n                })\r\n            }\r\n        }\r\n    })\r\n}","import axios from \"axios\";\r\nimport SweetAlert from 'sweetalert2'\r\n\r\nexport const fileDownload = async () => {\r\n    SweetAlert.fire({\r\n        title: \"Do you want to download data sheet\",\r\n        showCancelButton: true,\r\n        cancelButtonText: \"No\",\r\n        cancelButtonColor: \"red\",\r\n        confirmButtonText: \"Yes\",\r\n        icon: 'question'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            axios({\r\n                method: 'get',\r\n                url: \"https://serverabb.herokuapp.com/fileExport\",\r\n                responseType: 'blob',\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', 'raport.xls');\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\n","import axios from 'axios'\r\nimport SweetAlert from 'sweetalert2'\r\n\r\n\r\n\r\nexport const dropTable = async (Sheet) => {\r\n\r\n    const secondStep = async (Sheet) => {\r\n        let confirmText = Math.floor(Math.random() * (9999999 - 1000000)) + 1000000;;\r\n        const { value: numberValue } = await SweetAlert.fire({\r\n            title: \"Enter code\",\r\n            text: confirmText,\r\n            input: 'text'\r\n        })\r\n        if (numberValue === confirmText.toString()) {\r\n            axios({\r\n                method: 'POST',\r\n                url: \"http://localhost:5000/deleteTable\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n                data: {\r\n                    sheet: Sheet\r\n                }\r\n            }).catch((err) => {\r\n                return SweetAlert.fire({\r\n                    title: \"Ooops\",\r\n                    text: \"unexpected error occurred while deleting your table \\n please check your network connection \",\r\n                    icon: 'error',\r\n                })\r\n            }).then((res) => {\r\n                if (res)\r\n                    if (res.data)\r\n                        if (res.data.success) {\r\n                            SweetAlert.fire({\r\n                                icon: 'success',\r\n                                title: \"Table successfullly deleted\"\r\n                            })\r\n                        } else {\r\n                            SweetAlert.fire({\r\n                                icon: 'error',\r\n                                title: \"Table could not be  deleted\"\r\n                            })\r\n                        }\r\n                    else {\r\n                        SweetAlert.fire({\r\n                            icon: 'error',\r\n                            title: \"Table could not be  deleted\"\r\n                        })\r\n                    }\r\n                else {\r\n                    SweetAlert.fire({\r\n                        icon: 'error',\r\n                        title: \"Table could not be  deleted\"\r\n                    })\r\n                }\r\n            })\r\n\r\n\r\n        } else {\r\n            SweetAlert.fire({\r\n                icon: 'error',\r\n                title: \"Wrong secure code\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    SweetAlert.fire({\r\n        title: \"Delete TABLE\",\r\n        text: \"Are you sure you want to delete WHOLE table ?\",\r\n        showCancelButton: true,\r\n        cancelButtonColor: \"green\",\r\n        cancelButtonText: \"NO\",\r\n        confirmButtonColor: \"red\",\r\n        confirmButtonText: \"YES\",\r\n        reverseButtons: true,\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            secondStep(Sheet)\r\n        }\r\n    })\r\n\r\n}","import axios from 'axios'\r\nimport SweetAlert from 'sweetalert2'\r\n\r\n\r\n\r\nexport const clearTable = async (Sheet) => {\r\n\r\n    const secondStep = async (Sheet) => {\r\n        let confirmText = Math.floor(Math.random() * (9999999 - 1000000)) + 1000000;;\r\n        const { value: numberValue } = await SweetAlert.fire({\r\n            title: \"Enter code\",\r\n            text: confirmText,\r\n            input: 'text'\r\n        })\r\n        if (numberValue === confirmText.toString()) {\r\n            axios({\r\n                method: 'POST',\r\n                url: \"https://serverabb.herokuapp.com/clearTable\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n                data: {\r\n                    sheet: Sheet\r\n                }\r\n            }).catch((err) => {\r\n                return SweetAlert.fire({\r\n                    title: \"Ooops\",\r\n                    text: \"unexpected error occurred while clearing your table \\n please check your network connection \",\r\n                    icon: 'error',\r\n                })\r\n            }).then((res) => {\r\n                if (res)\r\n                    if (res.data)\r\n                        if (res.data.success) {\r\n                            SweetAlert.fire({\r\n                                icon: 'success',\r\n                                title: \"Table successfullly cleared\"\r\n                            })\r\n                        } else {\r\n                            SweetAlert.fire({\r\n                                icon: 'error',\r\n                                title: \"Table could not be  cleared\"\r\n                            })\r\n                        }\r\n                    else {\r\n                        SweetAlert.fire({\r\n                            icon: 'error',\r\n                            title: \"Table could not be  cleared\"\r\n                        })\r\n                    }\r\n                else {\r\n                    SweetAlert.fire({\r\n                        icon: 'error',\r\n                        title: \"Table could not be  cleared\"\r\n                    })\r\n                }\r\n            })\r\n\r\n\r\n        } else {\r\n            SweetAlert.fire({\r\n                icon: 'error',\r\n                title: \"Wrong secure code\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    SweetAlert.fire({\r\n        title: \"Clear TABLE\",\r\n        text: \"Are you sure you want to Clear WHOLE table ?\",\r\n        showCancelButton: true,\r\n        cancelButtonColor: \"green\",\r\n        cancelButtonText: \"NO\",\r\n        confirmButtonColor: \"red\",\r\n        confirmButtonText: \"YES\",\r\n        reverseButtons: true,\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            secondStep(Sheet)\r\n        }\r\n    })\r\n\r\n}","import SweetAlert from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const NewUser = async () => {\r\n    SweetAlert.mixin({\r\n        confirmButtonText: 'Next &rarr;',\r\n        showCancelButton: true,\r\n        progressSteps: ['1', '2', '3', '4', '5']\r\n    }).queue([\r\n        {\r\n            title: 'Username',\r\n            input: 'text',\r\n            inputPlaceholder: \"username\"\r\n        },\r\n        {\r\n            title: 'E-mail',\r\n            input: 'email',\r\n            inputPlaceholder: \"email\"\r\n        },\r\n        {\r\n            title: \"Role ?\",\r\n            input: 'select',\r\n            inputOptions: {\r\n                admin: \"admin\",\r\n                moderator: \"moderator\",\r\n                guest: \"guest\"\r\n            },\r\n            inputPlaceholder: 'Select Role',\r\n        },\r\n        {\r\n            title: \"Password\",\r\n            input: \"password\",\r\n            inputPlaceholder: \"password\"\r\n        },\r\n        {\r\n            title: \"Confirm password\",\r\n            input: \"password\",\r\n            inputPlaceholder: \"confirm password \"\r\n\r\n        }\r\n    ]).then((result) => {\r\n        console.log(result.value)\r\n        if (result.value) {\r\n            if (result.value[0] && result.value[1] && result.value[2] && result.value[3] && result.value[4])\r\n                if (result.value[3] === result.value[4]) {\r\n                    try {\r\n                        axios({\r\n                            method: 'POST',\r\n                            url: \"https://serverabb.herokuapp.com/register\",\r\n                            headers: {\r\n                                \"Access-Control-Allow-Origin\": \"*\",\r\n                            },\r\n                            data: {\r\n                                username: result.value[0],\r\n                                email: result.value[1],\r\n                                permissions: result.value[2],\r\n                                password: result.value[3],\r\n                            }\r\n                        }).catch((err) => {\r\n                            SweetAlert.fire({\r\n                                title: \"Sorry\",\r\n                                text: \"Something went wrong1\",\r\n                                icon: \"error\"\r\n                            })\r\n                        })\r\n                            .then((res) => {\r\n                                if (res.data)\r\n                                    if (res.data.success)\r\n                                        SweetAlert.fire({\r\n                                            title: \"Your user has successfully been registered \",\r\n                                            icon: \"success\"\r\n                                        })\r\n                                    else\r\n                                        if (res.data.message)\r\n                                            SweetAlert.fire({\r\n                                                title: \"Sorry\",\r\n                                                text: \"User already exists\",\r\n                                                icon: \"error\"\r\n                                            })\r\n                                        else\r\n                                            SweetAlert.fire({\r\n                                                title: \"Sorry\",\r\n                                                text: \"Something went wrong\",\r\n                                                icon: \"error\"\r\n                                            })\r\n                                else\r\n                                    SweetAlert.fire({\r\n                                        title: \"Sorry\",\r\n                                        text: \"Something went wrong\",\r\n                                        icon: \"error\"\r\n                                    })\r\n\r\n                            })\r\n                    } catch (error) {\r\n                        SweetAlert.fire({\r\n                            title: \"Sorry\",\r\n                            text: \"Something went wrong\",\r\n                            icon: \"error\"\r\n                        })\r\n                    }\r\n                } else {\r\n                    SweetAlert.fire({\r\n                        title: \"Sorry\",\r\n                        text: \"Passwords are not equal\",\r\n                        icon: \"error\"\r\n                    })\r\n                }\r\n            else\r\n                SweetAlert.fire({\r\n                    title: \"Sorry\",\r\n                    text: \"All fileds are required\",\r\n                    icon: \"error\"\r\n                })\r\n        }\r\n    })\r\n\r\n}","import SweetAlert from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nexport const passwordChange = async (user) => {\r\n    const { value: formValues } = await SweetAlert.fire({\r\n        title: `Settings for ${user.username}`,\r\n        html: `<label for=\"SweetAlert-email\">Email</label>\r\n            <input id=\"SweetAlert-email\" class=\"swal2-input\" placeholder='${user.email}' value='${user.email}'>\r\n            <label for=\"SweetAlert-password\">New Password</label>\r\n            <input id=\"SweetAlert-password\" class=\"swal2-input\" placeholder=\"New Password\" type=\"password\">\r\n            `,\r\n        focusConfirm: false,\r\n        showCancelButton: true,\r\n        preConfirm: () => {\r\n            return [\r\n                document.getElementById('SweetAlert-password').value,\r\n                document.getElementById('SweetAlert-email').value\r\n            ]\r\n        }\r\n    })\r\n    if (formValues) {\r\n\r\n        if (formValues[0] !== '' || formValues[1] !== user.email) {\r\n            axios({\r\n                url: \"https://serverabb.herokuapp.com/changeUsrData\",\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n                data: {\r\n                    username: user.username,\r\n                    password: formValues[0],\r\n                    email: formValues[1]\r\n                }\r\n            }).catch((err) => {\r\n                return SweetAlert.fire({\r\n                    title: \"Ooops\",\r\n                    text: \"unexpected error occurred while changing your data \",\r\n                    icon: 'error',\r\n                })\r\n            }).then((res) => {\r\n                if (res)\r\n                    if (res.data)\r\n                        if (res.data.success)\r\n                            SweetAlert.fire({\r\n                                title: \"Data successfully changed\",\r\n                                icon: 'success',\r\n                            })\r\n                        else\r\n                            return SweetAlert.fire({\r\n                                title: \"Ooops\",\r\n                                text: \"unexpected error occurred while changing your data \",\r\n                                icon: 'error',\r\n                            })\r\n                    else\r\n                        return SweetAlert.fire({\r\n                            title: \"Ooops\",\r\n                            text: \"unexpected error occurred while changing your data \",\r\n                            icon: 'error',\r\n                        })\r\n                else\r\n                    return SweetAlert.fire({\r\n                        title: \"Ooops\",\r\n                        text: \"unexpected error occurred while changing your data \",\r\n                        icon: 'error',\r\n                    })\r\n            })\r\n        }\r\n\r\n    }\r\n}","import SweetAlert from 'sweetalert2'\r\nimport axios from 'axios'\r\nexport const RodAdd = async () => {\r\n    let dataObject = {}\r\n    SweetAlert.fire({\r\n        title: \"Table name\",\r\n        input: 'text',\r\n        inputAttributes: {\r\n            required: true,\r\n        },\r\n        showCancelButton: true,\r\n    }).then(async (res) => {\r\n        if (res.isConfirmed) {\r\n            dataObject['table_name'] = res.value\r\n            await SweetAlert.fire({\r\n                title: 'How many rows',\r\n                icon: 'question',\r\n                input: 'range',\r\n                showCancelButton: true,\r\n                inputLabel: 'Column Ammount',\r\n                inputAttributes: {\r\n                    min: 1,\r\n                    max: 255,\r\n                    step: 1\r\n                },\r\n                inputValue: 6\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    dataObject['col_num'] = result.value\r\n                    let queueArray = []\r\n                    for (let i = 1; i <= dataObject.col_num; i++) {\r\n                        queueArray.push({ title: `Column ${i}` })\r\n                    }\r\n                    SweetAlert.mixin({\r\n                        input: 'text',\r\n                        confirmButtonText: 'Next &rarr;',\r\n                        inputAttributes: {\r\n                            required: true,\r\n                        },\r\n                        showCancelButton: true,\r\n                    }).queue(queueArray).then((result) => {\r\n                        if (result.isConfirmed)\r\n                            if (result.value) {\r\n                                let dataToSend = [dataObject['table_name'], ...result.value]\r\n                                axios({\r\n                                    method: \"post\",\r\n                                    url: \"https://serverabb.herokuapp.com/newTable\",\r\n                                    headers: {\r\n                                        \"Access-Control-Allow-Origin\": \"*\",\r\n                                    },\r\n                                    data: {\r\n                                        ...dataToSend\r\n                                    }\r\n                                }).catch((err) => {\r\n                                    return SweetAlert.fire({\r\n                                        title: \"Ooops\",\r\n                                        text: \"Could not connect to server\",\r\n                                        icon: 'error',\r\n                                    })\r\n                                }).then((res) => {\r\n                                    try {\r\n                                        if (res.data.success)\r\n                                            SweetAlert.fire({\r\n                                                icon: 'success',\r\n                                                title: \"Table successfully created\",\r\n                                            })\r\n                                        else\r\n                                            SweetAlert.fire({\r\n                                                icon: 'warning',\r\n                                                title: \"Sorry\",\r\n                                                text: \"We could't create your table please try again\"\r\n                                            })\r\n                                    } catch (err) {\r\n                                        return SweetAlert.fire({\r\n                                            title: \"Ooops\",\r\n                                            text: \"unexpected error occurred deleting row in your table\",\r\n                                            icon: 'error',\r\n                                        })\r\n                                    }\r\n                                })\r\n                            }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n}","import { React, useState, useContext } from 'react';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; //css\r\nimport \"../styles/home.css\";//css\r\n//other \r\nimport Table from './table'\r\nimport SheetsComponent from './sheets';\r\nimport SearchInput from './search';\r\nimport { uploadAlert } from './upload';\r\nimport { addRecord } from './addRecord'\r\nimport { UserContext } from './auth/userContext'\r\nimport { fileDownload } from './download'\r\nimport { dropTable } from './deleteTable'\r\nimport { clearTable } from './clearTable'\r\nimport { NewUser } from './auth/Options/addUser'\r\nimport { passwordChange } from './auth/Options/passwordChange'\r\nimport { RodAdd } from './addTable'\r\n\r\nconst HomeComponent = () => {\r\n    //modals hooks\r\n    const [refreshFire, setrefreshFire] = useState(0)\r\n    const [Columns, setColumns] = useState([])\r\n    const [SearchModalStatus, ChangeSearchModalStatus] = useState('');       //status for search\r\n    const { user, Setuser } = useContext(UserContext) //contexr\r\n    const [Sheet, setSheet] = useState('TG')\r\n    document.title = `Patent Menager`;\r\n\r\n    const userPermission = () => {\r\n        if (user.permissions === 'admin') {\r\n            return (\r\n                <div className=\"navbar-nav ml-auto mt-2 mt-lg-0 miniNav\">\r\n                    <i title=\"Clear table\" onClick={() => clearTable(Sheet)} className=\"fa fa-eraser  \"></i>\r\n                    <i title=\"Delete\" onClick={() => dropTable(Sheet)} className=\"fa fa-trash\"></i>\r\n                    <i title=\"Add Table\" onClick={() => RodAdd()} className=\"fa fa-table\"></i>\r\n                    <i title=\"Refresh\" onClick={() => { setrefreshFire(refreshFire + 1) }} className=\"fa fa-refresh\" />\r\n                    <i title=\"Add Record\" onClick={() => { addRecord(Columns, Sheet, setrefreshFire, refreshFire) }} className=\"fa fa-plus\"></i>\r\n                    <i title=\"Upload Sheet \" onClick={() => uploadAlert()} className=\"fa fa-upload\"></i>\r\n                    <i title=\"Download sheet\" onClick={() => fileDownload()} className=\"fa fa-download\"></i>\r\n                    <i title=\"User\" onClick={() => passwordChange(user)} className=\"fa fa-user\"></i>\r\n                    <i title=\"Add user\" onClick={() => NewUser(user)} className=\"fa fa-user-plus\"></i>\r\n\r\n                </div >\r\n            )\r\n        }\r\n        else if (user.permissions === 'moderator') {\r\n            return (\r\n                <div className=\"navbar-nav ml-auto mt-2 mt-lg-0 miniNav\">\r\n                    <i title=\"Refresh\" onClick={() => { setrefreshFire(refreshFire + 1) }} className=\"fa fa-refresh\" />\r\n                    <i title=\"Add Record\" onClick={() => { addRecord(Columns, Sheet, setrefreshFire, refreshFire) }} className=\"fa fa-plus\"></i>\r\n                    <i title=\"Upload Sheet \" onClick={() => uploadAlert()} className=\"fa fa-upload\"></i>\r\n                    <i title=\"Download sheet\" onClick={() => fileDownload()} className=\"fa fa-download\"></i>\r\n                    <i title=\"User\" onClick={() => passwordChange(user)} className=\"fa fa-user\"></i>\r\n                </div >\r\n            )\r\n        }\r\n        else if (user.permissions === 'guest') {\r\n            return (\r\n                <div className=\"navbar-nav ml-auto mt-2 mt-lg-0 miniNav\">\r\n                    <i title=\"Refresh\" onClick={() => { setrefreshFire(refreshFire + 1) }} className=\"fa fa-refresh\" />\r\n                    <i title=\"User\" onClick={() => passwordChange(user)} className=\"fa fa-user\"></i>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, Setuser }} >\r\n            <div className=\"wholePage d-flex flex-column\" >\r\n                <nav className=\"navbar navigatorSide navbar-expand-lg navbar-dark bg-dark\">\r\n                    <button className=\"navbar-toggler ml-2\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse toogleBar\" id=\"navbarTogglerDemo01\">\r\n                        <SheetsComponent sheetValue={Sheet} sheet={setSheet} />\r\n                        <SearchInput changeSearch={ChangeSearchModalStatus} />\r\n                        {userPermission()}\r\n                    </div>\r\n                </nav>\r\n                <div className=\"tableContainer flex-grow-1\">\r\n                    <Table className=\"table\"\r\n                        sheetToImport={Sheet} columnNames={setColumns} search={SearchModalStatus} refreshFire={refreshFire} />\r\n                </div>\r\n\r\n            </div >\r\n        </UserContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default HomeComponent;","import { useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport { UserContext } from './auth/userContext'\r\nimport LoginComponent from './auth/logIn'\r\nimport HomeComponent from './home'\r\n\r\n\r\nexport const SidteRouter = () => {\r\n    const [user, Setuser] = useState({\r\n        logged: false,\r\n    })\r\n\r\n    return (\r\n        <Router>\r\n            <UserContext.Provider value={{ user, Setuser }} >\r\n                <Route path='/' exact >\r\n                    {user.logged ? (< HomeComponent />) : (<LoginComponent />)}\r\n                </Route>\r\n            </UserContext.Provider>\r\n        </Router>\r\n    )\r\n}\r\nexport default SidteRouter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { SidteRouter } from './components/routerComponent'\nReactDOM.render(\n  <React.StrictMode>\n    <SidteRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}